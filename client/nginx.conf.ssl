# Secure default configuration generated by Mozilla SSL Configuration Generator
# generated 2024-01-21, Mozilla Guideline v5.7, nginx 1.24.0, OpenSSL 3.1.4, intermediate configuration
# https://ssl-config.mozilla.org/#server=nginx&version=1.24.0&config=intermediate&openssl=3.1.4&guideline=5.7

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # To Configure SSL, comment all lines within the Non-SSL section and uncomment all lines under the SSL section. 
    ########################################  Non-SSL  ########################################
    # server_name chat.nexuni.com;
 
    # https://docs.nginx.com/nginx/admin-guide/web-server/compression/
    # gzip on;
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/css application/javascript application/json application/octet-stream;

    # Increase the client_max_body_size to allow larger file uploads
    # The default limits for image uploads as of 11/22/23 is 20MB/file, and 25MB/request
    # client_max_body_size 25M;

    # location /api/ {
    #     proxy_pass http://api:3080$request_uri;
    # }

    # location / {
    #     proxy_pass http://api:3080/;
    # }

    ########################################  SSL  ########################################
   # Redirect all http traffic to https
   location / {
       return 301 https://$host$request_uri;
   }
}

server {
   listen [::]:443 ssl; # managed by Certbot
   listen 443 ssl; # managed by Certbot

   ssl_certificate /etc/letsencrypt/live/chat.nexuni.com/fullchain.pem;
   ssl_certificate_key /etc/letsencrypt/live/chat.nexuni.com/privkey.pem;
   include /etc/letsencrypt/options-ssl-nginx.conf;
   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

   server_name chat.nexuni.com;
 
   # Increase the client_max_body_size to allow larger file uploads
   # The default limits for image uploads as of 11/22/23 is 20MB/file, and 25MB/request
   client_max_body_size 25M;

   location /api {
       proxy_pass http://api:3080/api;
   }

   location / {
       proxy_pass http://api:3080;
   }
}
